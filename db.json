{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/1.gif","path":"images/1.gif","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1520576929399},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1520576929400},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1520576929400},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1520576929400},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1520576929400},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1520576929409},{"_id":"source/_posts/cryptokitties-gene-algorithm.md","hash":"428fffecc5cbc123ee8c6d6b04f04f34a3588a3d","modified":1520592399958},{"_id":"source/_posts/test-hexo.md","hash":"24f23fa1fd5b313fc82a454cd25f4915e593ec77","modified":1520591209590},{"_id":"source/categories/index.md","hash":"0b035354e8b06c5cf8cbf197f355538228b6531b","modified":1520580965879},{"_id":"source/images/1.gif","hash":"562bb55715ba8d164ffd83d57bb9bcdb7220ebb3","modified":1520580711864},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1520576929400},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1520576929400},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1520576929401},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1520576929401},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1520576929401},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1520576929401},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1520576929402},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1520576929401},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1520576929402},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1520576929401},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1520576929402},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1520576929402},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1520576929408},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1520576929408},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1520576929408},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1520576929409},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1520576929409},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1520576929409},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1520576929410},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1520576929409},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1520576929402},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1520576929403},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1520576929402},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1520576929403},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1520576929403},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1520576929403},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1520576929403},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1520576929404},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1520576929405},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1520576929405},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1520576929407},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1520576929407},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1520576929407},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1520576929407},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1520576929408},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1520576929408},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1520576929412},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1520576929417},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1520576929423},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1520576929423},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1520576929424},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1520576929424},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1520576929424},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1520576929424},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1520576929424},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1520576929426},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1520576929428},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1520576929427},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1520576929427},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1520576929406},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1520576929406},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1520576929406},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1520576929407},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1520576929407},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1520576929407},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1520576929413},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1520576929414},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1520576929414},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1520576929414},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1520576929415},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1520576929415},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1520576929416},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1520576929416},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1520576929416},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1520576929416},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1520576929417},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1520576929417},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1520576929418},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1520576929418},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1520576929421},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1520576929425},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1520576929425},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1520576929425},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1520576929426},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1520576929426},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1520576929426},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1520576929420},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1520576929420},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1520576929423},{"_id":"public/categories/index.html","hash":"785560786d8e8b9d4ebdf326602e86c63091445d","modified":1520592413451},{"_id":"public/2018/03/09/test-hexo/index.html","hash":"5ce747e2f8582e55f8cc4d3fbb4488f31e4985f8","modified":1520592413460},{"_id":"public/archives/index.html","hash":"a968f54f69b56043cb898ef3e43d79f8d726fdb2","modified":1520592413461},{"_id":"public/index.html","hash":"b49574d6b3e2939f7cdb9eca2c12c53cc95c63ad","modified":1520592413461},{"_id":"public/categories/live/index.html","hash":"dfc6b5fa2c93bed882dc9d1eb8bd8b534d8efa0d","modified":1520592413461},{"_id":"public/tags/live/index.html","hash":"6ee8614e001ef4e80de3b10a76d3e7b38b06b20d","modified":1520592413462},{"_id":"public/2018/03/09/cryptokitties-gene-algorithm/index.html","hash":"278b56feaf7c3a583494f25034aa3b5c95e2a033","modified":1520592413465},{"_id":"public/tags/blockchain/index.html","hash":"85f5dcb93cf18bcf12cd22c2074d7bf535882413","modified":1520592413465},{"_id":"public/tags/dev/index.html","hash":"e8327d0961acc53e7b55d2888eaae4ff654203d4","modified":1520592413465},{"_id":"public/images/1.gif","hash":"562bb55715ba8d164ffd83d57bb9bcdb7220ebb3","modified":1520592413468},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1520592413468},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1520592413468},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1520592413468},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1520592413468},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1520592413468},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1520592413469},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1520592413469},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1520592413469},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1520592413469},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1520592413469},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1520592413841},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1520592413844},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1520592413844},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1520592413844},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1520592413844},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1520592413844},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1520592413844},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1520592413844},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1520592413844},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1520592413844},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1520592413845},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1520592413845},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1520592413845}],"Category":[{"name":"live","_id":"cjejtgn3x0003as557yvy5leq"}],"Data":[],"Page":[{"title":"分类","date":"2018-03-09T07:35:13.000Z","type":"categories","_content":"menu:\n  home: /\n  categories: /categories\n  archives: /archives\n  tags: /tags","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-03-09 15:35:13\ntype: categories\n---\nmenu:\n  home: /\n  categories: /categories\n  archives: /archives\n  tags: /tags","updated":"2018-03-09T07:36:05.879Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjejtgn50000aas55agyizaq0","content":"<p>menu:<br>  home: /<br>  categories: /categories<br>  archives: /archives<br>  tags: /tags</p>\n","site":{"data":{}},"excerpt":"","more":"<p>menu:<br>  home: /<br>  categories: /categories<br>  archives: /archives<br>  tags: /tags</p>\n"}],"Post":[{"title":"solidity基因解析算法","date":"2018-03-09T10:29:58.000Z","_content":"#solidity基因解析算法\n\nsolidity储存是比较昂贵的，所以需要对数据做压缩，因为最初的设计问题，单位的基因被设定为了uint256，也就是一个256位的int，相当于32个byte。\n\n而项目的需求是，需要把这32个byte解析为超过50个属性，经过和策划的讨论，最终定了具体方案。无非就是用某个byte表示某个属性，或者某些bit表示某些属性，大部分都很容易通过bitwise位操作来实现。但是有一个部分逻辑实现起来比较复杂，整理成类似ACM的需求：\n```\n输入 Mbyte integer, Number N, Length L\nM*8<L<M*16\nN<50\nL<N\n输出 array[L] 内容为0~N的随机数，并且不重复\n```\n\n春节前写了一个算法大概实现了，但是随机数不均匀，而且感觉实现很烂。昨天灵机一动换了一个思路，其实完全可以把这个问题转换为一个洗牌问题。\n相当于N张牌，用一个随机数种子seed洗牌，取出前L张。\n这样问题就简化了，只需要实现核心的根据根据seed洗牌函数即可，可以使用 [Fisher–Yates shuffle](https://gaohaoyang.github.io/2016/10/16/shuffle-algorithm)算法。用MD5可以在于如何保证M个byte生成N个数字。\n\nJavascript代码如下\n```Javascript\nfunction seedArray(seedHex,length){\n  let hexLen = seedHex.length / 2;\n  let array = new Array();\n  for(let i=0;i<length && i <hexLen;i++){\n    array.push(getByteFromHexWithOut0x(seedHex,i));\n  }\n  let left = length - array.length;\n  if(left == 0) return array;\n  let md5Count = (left + 1)/16;//要生成left个MD5\n  let str = \"\";\n  let last = \"\" + seedHex;\n  for(let i=0;i<md5Count;i++){\n    let t = md5(last);\n    str += t;\n    last = t;\n  }\n  for(let i=0;i<left;i++){\n    array.push(getByteFromHexWithOut0x(str,i));\n  }\n  return array;\n}\n\nfunction shuffle(array,seed){\n  let _seedArray = seedArray(seed,array.length);\n  for(let i=0;i<array.length;i++){\n     let randomIndex = _seedArray[i] % array.length;\n     let itemAtIndex = array[randomIndex];\n     array[randomIndex] = array[i];\n     array[i] = itemAtIndex;\n  }\n}\n```\n","source":"_posts/cryptokitties-gene-algorithm.md","raw":"---\ntitle: solidity基因解析算法\ndate: 2018-03-09 18:29:58\ntags: [blockchain,dev]\n---\n#solidity基因解析算法\n\nsolidity储存是比较昂贵的，所以需要对数据做压缩，因为最初的设计问题，单位的基因被设定为了uint256，也就是一个256位的int，相当于32个byte。\n\n而项目的需求是，需要把这32个byte解析为超过50个属性，经过和策划的讨论，最终定了具体方案。无非就是用某个byte表示某个属性，或者某些bit表示某些属性，大部分都很容易通过bitwise位操作来实现。但是有一个部分逻辑实现起来比较复杂，整理成类似ACM的需求：\n```\n输入 Mbyte integer, Number N, Length L\nM*8<L<M*16\nN<50\nL<N\n输出 array[L] 内容为0~N的随机数，并且不重复\n```\n\n春节前写了一个算法大概实现了，但是随机数不均匀，而且感觉实现很烂。昨天灵机一动换了一个思路，其实完全可以把这个问题转换为一个洗牌问题。\n相当于N张牌，用一个随机数种子seed洗牌，取出前L张。\n这样问题就简化了，只需要实现核心的根据根据seed洗牌函数即可，可以使用 [Fisher–Yates shuffle](https://gaohaoyang.github.io/2016/10/16/shuffle-algorithm)算法。用MD5可以在于如何保证M个byte生成N个数字。\n\nJavascript代码如下\n```Javascript\nfunction seedArray(seedHex,length){\n  let hexLen = seedHex.length / 2;\n  let array = new Array();\n  for(let i=0;i<length && i <hexLen;i++){\n    array.push(getByteFromHexWithOut0x(seedHex,i));\n  }\n  let left = length - array.length;\n  if(left == 0) return array;\n  let md5Count = (left + 1)/16;//要生成left个MD5\n  let str = \"\";\n  let last = \"\" + seedHex;\n  for(let i=0;i<md5Count;i++){\n    let t = md5(last);\n    str += t;\n    last = t;\n  }\n  for(let i=0;i<left;i++){\n    array.push(getByteFromHexWithOut0x(str,i));\n  }\n  return array;\n}\n\nfunction shuffle(array,seed){\n  let _seedArray = seedArray(seed,array.length);\n  for(let i=0;i<array.length;i++){\n     let randomIndex = _seedArray[i] % array.length;\n     let itemAtIndex = array[randomIndex];\n     array[randomIndex] = array[i];\n     array[i] = itemAtIndex;\n  }\n}\n```\n","slug":"cryptokitties-gene-algorithm","published":1,"updated":"2018-03-09T10:52:40.059Z","_id":"cjejtgn3n0000as551bku63pr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>#solidity基因解析算法</p>\n<p>solidity储存是比较昂贵的，所以需要对数据做压缩，因为最初的设计问题，单位的基因被设定为了uint256，也就是一个256位的int，相当于32个byte。</p>\n<p>而项目的需求是，需要把这32个byte解析为超过50个属性，经过和策划的讨论，最终定了具体方案。无非就是用某个byte表示某个属性，或者某些bit表示某些属性，大部分都很容易通过bitwise位操作来实现。但是有一个部分逻辑实现起来比较复杂，整理成类似ACM的需求：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入 Mbyte integer, Number N, Length L</span><br><span class=\"line\">M*8&lt;L&lt;M*16</span><br><span class=\"line\">N&lt;50</span><br><span class=\"line\">L&lt;N</span><br><span class=\"line\">输出 array[L] 内容为0~N的随机数，并且不重复</span><br></pre></td></tr></table></figure></p>\n<p>春节前写了一个算法大概实现了，但是随机数不均匀，而且感觉实现很烂。昨天灵机一动换了一个思路，其实完全可以把这个问题转换为一个洗牌问题。<br>相当于N张牌，用一个随机数种子seed洗牌，取出前L张。<br>这样问题就简化了，只需要实现核心的根据根据seed洗牌函数即可，可以使用 <a href=\"https://gaohaoyang.github.io/2016/10/16/shuffle-algorithm\" target=\"_blank\" rel=\"noopener\">Fisher–Yates shuffle</a>算法。用MD5可以在于如何保证M个byte生成N个数字。</p>\n<p>Javascript代码如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seedArray</span>(<span class=\"params\">seedHex,length</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hexLen = seedHex.length / <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;length &amp;&amp; i &lt;hexLen;i++)&#123;</span><br><span class=\"line\">    array.push(getByteFromHexWithOut0x(seedHex,i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> left = length - array.length;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(left == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> md5Count = (left + <span class=\"number\">1</span>)/<span class=\"number\">16</span>;<span class=\"comment\">//要生成left个MD5</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> last = <span class=\"string\">\"\"</span> + seedHex;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;md5Count;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> t = md5(last);</span><br><span class=\"line\">    str += t;</span><br><span class=\"line\">    last = t;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;left;i++)&#123;</span><br><span class=\"line\">    array.push(getByteFromHexWithOut0x(str,i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle</span>(<span class=\"params\">array,seed</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> _seedArray = seedArray(seed,array.length);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;array.length;i++)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> randomIndex = _seedArray[i] % array.length;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> itemAtIndex = array[randomIndex];</span><br><span class=\"line\">     array[randomIndex] = array[i];</span><br><span class=\"line\">     array[i] = itemAtIndex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>#solidity基因解析算法</p>\n<p>solidity储存是比较昂贵的，所以需要对数据做压缩，因为最初的设计问题，单位的基因被设定为了uint256，也就是一个256位的int，相当于32个byte。</p>\n<p>而项目的需求是，需要把这32个byte解析为超过50个属性，经过和策划的讨论，最终定了具体方案。无非就是用某个byte表示某个属性，或者某些bit表示某些属性，大部分都很容易通过bitwise位操作来实现。但是有一个部分逻辑实现起来比较复杂，整理成类似ACM的需求：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入 Mbyte integer, Number N, Length L</span><br><span class=\"line\">M*8&lt;L&lt;M*16</span><br><span class=\"line\">N&lt;50</span><br><span class=\"line\">L&lt;N</span><br><span class=\"line\">输出 array[L] 内容为0~N的随机数，并且不重复</span><br></pre></td></tr></table></figure></p>\n<p>春节前写了一个算法大概实现了，但是随机数不均匀，而且感觉实现很烂。昨天灵机一动换了一个思路，其实完全可以把这个问题转换为一个洗牌问题。<br>相当于N张牌，用一个随机数种子seed洗牌，取出前L张。<br>这样问题就简化了，只需要实现核心的根据根据seed洗牌函数即可，可以使用 <a href=\"https://gaohaoyang.github.io/2016/10/16/shuffle-algorithm\" target=\"_blank\" rel=\"noopener\">Fisher–Yates shuffle</a>算法。用MD5可以在于如何保证M个byte生成N个数字。</p>\n<p>Javascript代码如下<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">seedArray</span>(<span class=\"params\">seedHex,length</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hexLen = seedHex.length / <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;length &amp;&amp; i &lt;hexLen;i++)&#123;</span><br><span class=\"line\">    array.push(getByteFromHexWithOut0x(seedHex,i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> left = length - array.length;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(left == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> md5Count = (left + <span class=\"number\">1</span>)/<span class=\"number\">16</span>;<span class=\"comment\">//要生成left个MD5</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> last = <span class=\"string\">\"\"</span> + seedHex;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;md5Count;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> t = md5(last);</span><br><span class=\"line\">    str += t;</span><br><span class=\"line\">    last = t;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;left;i++)&#123;</span><br><span class=\"line\">    array.push(getByteFromHexWithOut0x(str,i));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle</span>(<span class=\"params\">array,seed</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> _seedArray = seedArray(seed,array.length);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;array.length;i++)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> randomIndex = _seedArray[i] % array.length;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> itemAtIndex = array[randomIndex];</span><br><span class=\"line\">     array[randomIndex] = array[i];</span><br><span class=\"line\">     array[i] = itemAtIndex;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"缘起","date":"2018-03-09T06:33:03.000Z","_content":"\n# 缘起\n\n```bash\n# First Blog on Hexo and github.io\n```\n中断了博客近10年了，上次写还是在百度空间。近十年来，对我个人来说，无论是事业、家庭上，还是思想、技术上，都发生了很大的改变，有成长，有快乐，有痛苦。仔细回想，从小就不喜欢照照片、写日记，随着年龄的增长，加上经历过几次丢硬盘数据、相册数据的事件，越来越感觉到记录的必要性。妖猫记里白乐天的人设为起居郎,古代有专门的史官记录皇帝的言行。时间到了2018年，区块链、AI、web3.0、知识付费、新零售、共享经济各种概念、思想层出不穷。而我，已过而立之年，应该在这个世界上留下一点点印记，就像中本聪在比特币的创世区块链上永久的刻下了“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks。(2009年1月3日,财政大臣正站在第二轮救助银行业的边缘)”。\n\n从16年底开始使用markdown和有道来记录一些东西，相当于在写私人的blog和工作笔记，当然中间也因为种种原因，断断续续，工作特别忙的时候经常会漏掉。\n2017年已经过去了，我很怀念他。去年定的小目标，在春节前终于都完成了。春节前接到个区块链相关的项目，基本上是从零基础开始接触这个全新领域。直到昨天，项目告一段落，终于可以有点时间做自己想做的事情。\n\n只谈对这个项目的感触和收获吧。\n- 最大的收获就是心态更open了，主要是对新技术、新事物的态度更加积极了。* 也可以说以前是井底之蛙，哈哈。 *\n- 第二收获就是对自己的工作效率有了另外一个认识，最近的代码输出量和编码效率是之前的几倍。\n- move fast，很多时候不move fast就死了\n- 减少了自己的惰性，天下事有难易乎，为之，则难者亦易矣\n","source":"_posts/test-hexo.md","raw":"---\ntitle: 缘起\ndate: 2018-03-09 14:33:03\ntags: live\ncategories: live\n---\n\n# 缘起\n\n```bash\n# First Blog on Hexo and github.io\n```\n中断了博客近10年了，上次写还是在百度空间。近十年来，对我个人来说，无论是事业、家庭上，还是思想、技术上，都发生了很大的改变，有成长，有快乐，有痛苦。仔细回想，从小就不喜欢照照片、写日记，随着年龄的增长，加上经历过几次丢硬盘数据、相册数据的事件，越来越感觉到记录的必要性。妖猫记里白乐天的人设为起居郎,古代有专门的史官记录皇帝的言行。时间到了2018年，区块链、AI、web3.0、知识付费、新零售、共享经济各种概念、思想层出不穷。而我，已过而立之年，应该在这个世界上留下一点点印记，就像中本聪在比特币的创世区块链上永久的刻下了“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks。(2009年1月3日,财政大臣正站在第二轮救助银行业的边缘)”。\n\n从16年底开始使用markdown和有道来记录一些东西，相当于在写私人的blog和工作笔记，当然中间也因为种种原因，断断续续，工作特别忙的时候经常会漏掉。\n2017年已经过去了，我很怀念他。去年定的小目标，在春节前终于都完成了。春节前接到个区块链相关的项目，基本上是从零基础开始接触这个全新领域。直到昨天，项目告一段落，终于可以有点时间做自己想做的事情。\n\n只谈对这个项目的感触和收获吧。\n- 最大的收获就是心态更open了，主要是对新技术、新事物的态度更加积极了。* 也可以说以前是井底之蛙，哈哈。 *\n- 第二收获就是对自己的工作效率有了另外一个认识，最近的代码输出量和编码效率是之前的几倍。\n- move fast，很多时候不move fast就死了\n- 减少了自己的惰性，天下事有难易乎，为之，则难者亦易矣\n","slug":"test-hexo","published":1,"updated":"2018-03-09T10:52:15.507Z","_id":"cjejtgn3q0001as55mut0y12r","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># First Blog on Hexo and github.io</span></span><br></pre></td></tr></table></figure>\n<p>中断了博客近10年了，上次写还是在百度空间。近十年来，对我个人来说，无论是事业、家庭上，还是思想、技术上，都发生了很大的改变，有成长，有快乐，有痛苦。仔细回想，从小就不喜欢照照片、写日记，随着年龄的增长，加上经历过几次丢硬盘数据、相册数据的事件，越来越感觉到记录的必要性。妖猫记里白乐天的人设为起居郎,古代有专门的史官记录皇帝的言行。时间到了2018年，区块链、AI、web3.0、知识付费、新零售、共享经济各种概念、思想层出不穷。而我，已过而立之年，应该在这个世界上留下一点点印记，就像中本聪在比特币的创世区块链上永久的刻下了“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks。(2009年1月3日,财政大臣正站在第二轮救助银行业的边缘)”。</p>\n<p>从16年底开始使用markdown和有道来记录一些东西，相当于在写私人的blog和工作笔记，当然中间也因为种种原因，断断续续，工作特别忙的时候经常会漏掉。<br>2017年已经过去了，我很怀念他。去年定的小目标，在春节前终于都完成了。春节前接到个区块链相关的项目，基本上是从零基础开始接触这个全新领域。直到昨天，项目告一段落，终于可以有点时间做自己想做的事情。</p>\n<p>只谈对这个项目的感触和收获吧。</p>\n<ul>\n<li>最大的收获就是心态更open了，主要是对新技术、新事物的态度更加积极了。<em> 也可以说以前是井底之蛙，哈哈。 </em></li>\n<li>第二收获就是对自己的工作效率有了另外一个认识，最近的代码输出量和编码效率是之前的几倍。</li>\n<li>move fast，很多时候不move fast就死了</li>\n<li>减少了自己的惰性，天下事有难易乎，为之，则难者亦易矣</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># First Blog on Hexo and github.io</span></span><br></pre></td></tr></table></figure>\n<p>中断了博客近10年了，上次写还是在百度空间。近十年来，对我个人来说，无论是事业、家庭上，还是思想、技术上，都发生了很大的改变，有成长，有快乐，有痛苦。仔细回想，从小就不喜欢照照片、写日记，随着年龄的增长，加上经历过几次丢硬盘数据、相册数据的事件，越来越感觉到记录的必要性。妖猫记里白乐天的人设为起居郎,古代有专门的史官记录皇帝的言行。时间到了2018年，区块链、AI、web3.0、知识付费、新零售、共享经济各种概念、思想层出不穷。而我，已过而立之年，应该在这个世界上留下一点点印记，就像中本聪在比特币的创世区块链上永久的刻下了“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks。(2009年1月3日,财政大臣正站在第二轮救助银行业的边缘)”。</p>\n<p>从16年底开始使用markdown和有道来记录一些东西，相当于在写私人的blog和工作笔记，当然中间也因为种种原因，断断续续，工作特别忙的时候经常会漏掉。<br>2017年已经过去了，我很怀念他。去年定的小目标，在春节前终于都完成了。春节前接到个区块链相关的项目，基本上是从零基础开始接触这个全新领域。直到昨天，项目告一段落，终于可以有点时间做自己想做的事情。</p>\n<p>只谈对这个项目的感触和收获吧。</p>\n<ul>\n<li>最大的收获就是心态更open了，主要是对新技术、新事物的态度更加积极了。<em> 也可以说以前是井底之蛙，哈哈。 </em></li>\n<li>第二收获就是对自己的工作效率有了另外一个认识，最近的代码输出量和编码效率是之前的几倍。</li>\n<li>move fast，很多时候不move fast就死了</li>\n<li>减少了自己的惰性，天下事有难易乎，为之，则难者亦易矣</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjejtgn3q0001as55mut0y12r","category_id":"cjejtgn3x0003as557yvy5leq","_id":"cjejtgn3y0006as55nfmbcued"}],"PostTag":[{"post_id":"cjejtgn3n0000as551bku63pr","tag_id":"cjejtgn3v0002as55irmdpdht","_id":"cjejtgn3y0007as55urww2sgq"},{"post_id":"cjejtgn3n0000as551bku63pr","tag_id":"cjejtgn3x0004as55ij3zdsyt","_id":"cjejtgn3y0008as55pk461d40"},{"post_id":"cjejtgn3q0001as55mut0y12r","tag_id":"cjejtgn3x0005as550r35fjzc","_id":"cjejtgn3z0009as55rtdfajli"}],"Tag":[{"name":"blockchain","_id":"cjejtgn3v0002as55irmdpdht"},{"name":"dev","_id":"cjejtgn3x0004as55ij3zdsyt"},{"name":"live","_id":"cjejtgn3x0005as550r35fjzc"}]}}